# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT

name: Run Integration Tests
env:
  PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
  TERRAFORM_AWS_ASSUME_ROLE: ${{ vars.TERRAFORM_AWS_ASSUME_ROLE }}
  TERRAFORM_AWS_ASSUME_ROLE_DURATION: 14400 # 4 hours
  S3_INTEGRATION_BUCKET: ${{ vars.S3_INTEGRATION_BUCKET }}
  KEY_NAME: ${{ secrets.KEY_NAME }}
  CF_IAM_ROLE: ${{ secrets.CF_IAM_ROLE }}
  CF_KEY_NAME: ${{ secrets.CF_KEY_NAME }}
  ECR_INTEGRATION_TEST_REPO: "cwagent-integration-test"
  CWA_GITHUB_TEST_REPO_NAME: "aws/amazon-cloudwatch-agent-test"
  CWA_GITHUB_TEST_REPO_URL: "https://github.com/aws/amazon-cloudwatch-agent-test.git"
  CWA_GITHUB_TEST_REPO_BRANCH: "main"
  TERRAFORM_AWS_ASSUME_ROLE_ITAR: ${{ vars.TERRAFORM_AWS_ASSUME_ROLE_ITAR }}
  S3_INTEGRATION_BUCKET_ITAR: ${{ vars.S3_INTEGRATION_BUCKET_ITAR }}
  TERRAFORM_AWS_ASSUME_ROLE_CN: ${{ vars.TERRAFORM_AWS_ASSUME_ROLE_CN }}
  S3_INTEGRATION_BUCKET_CN: ${{ vars.S3_INTEGRATION_BUCKET_CN }}
  CW_AGENT_IMAGE_ECR: ${{ secrets.AWS_ECR_PRIVATE_REGISTRY }}/cwagent-integration-test:${{ github.sha }}
  CW_AGENT_RPM_BUCKET: "s3://${{ secrets.S3_INTEGRATION_BUCKET }}/integration-test/binary/${{ github.sha }}/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm"

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
#  BuildAndUpload:
#    uses: ./.github/workflows/test-build.yml
#    secrets: inherit
#    permissions:
#      id-token: write
#      contents: read
#    with:
#      BucketKey: "integration-test/binary/${{ github.sha }}"
#      PackageBucketKey: "integration-test/packaging/${{ github.sha }}"
#      TerraformAWSAssumeRole: ${{ vars.TERRAFORM_AWS_ASSUME_ROLE }}
#      Bucket: ${{ vars.S3_INTEGRATION_BUCKET }}
#
#  BuildDocker:
#    needs: [ BuildAndUpload ]
#    uses: ./.github/workflows/test-build-docker.yml
#    secrets: inherit
#    permissions:
#      id-token: write
#      contents: read
#    with:
#      ContainerRepositoryNameAndTag: "cwagent-integration-test:${{ github.sha }}"
#      BucketKey: "integration-test/binary/${{ github.sha }}"
#      PackageBucketKey: "integration-test/packaging/${{ github.sha }}"

#  JavaEC2ASGEndToEndTest:
#    name: "AppSignals E2E EC2 Test"
#    needs: [ BuildAndUpload, BuildDocker ]
#    uses: ./.github/workflows/test-2.yml
#    permissions:
#      id-token: write
#      contents: read
#    secrets: inherit
#
  ApplicationSignalsEndToEndTest:
    name: "Application Signals E2E Test"
#    needs: [ BuildAndUpload, BuildDocker ]
    uses: ./.github/workflows/application-signals-e2e-test.yml
    secrets: inherit
    permissions:
      id-token: write
      contents: read


#  java-eks-e2e-test:
#    uses: aws-observability/aws-application-signals-test-framework/.github/workflows/java-eks-e2e-test.yml@consolidate-release
#    secrets: inherit
#    permissions:
#      id-token: write
#      contents: read
#    with:
#      aws-region: us-east-1
#      test-cluster-name: 'e2e-cw-agent-test'
#      caller-workflow-name: 'main-build'
#      patch-image-ecr: "${{ env.CW_AGENT_IMAGE_ECR }}"


#  java-ec2-default-e2e-test:
#    uses: aws-observability/aws-application-signals-test-framework/.github/workflows/java-ec2-default-e2e-test.yml@consolidate-release
#    secrets: inherit
#    with:
#      aws-region: us-east-1
#      caller-workflow-name: 'main-build'
#      cw-agent-rpm: ${{ env.CW_AGENT_RPM_BUCKET }}
#
#  java-ec2-asg-e2e-test:
#    uses: aws-observability/aws-application-signals-test-framework/.github/workflows/java-ec2-asg-e2e-test.yml@consolidate-release
#    secrets: inherit
#    with:
#      aws-region: us-east-1
#      caller-workflow-name: 'main-build'
#      cw-agent-rpm: ${{ env.CW_AGENT_RPM_BUCKET }}
#
#  java-metric-limiter-e2e-test:
#    needs: [ java-eks-e2e-test ]
#    uses: aws-observability/aws-application-signals-test-framework/.github/workflows/java-eks-e2e-test.yml@consolidate-release
#    secrets: inherit
#    with:
#      aws-region: us-east-1
#      test-cluster-name: 'e2e-cw-agent-test'
#      caller-workflow-name: 'main-build'
#      patch-image-ecr: ${{ env.CW_AGENT_IMAGE_ECR }}
#
#  python-eks-e2e-test:
#    needs: [ java-metric-limiter-e2e-test ]
#    uses: aws-observability/aws-application-signals-test-framework/.github/workflows/python-eks-e2e-test.yml@consolidate-release
#    secrets: inherit
#    with:
#      aws-region: us-east-1
#      test-cluster-name: 'e2e-cw-agent-test'
#      caller-workflow-name: 'main-build'
#      patch-image-ecr: ${{ env.CW_AGENT_IMAGE_ECR }}
#
#  python-ec2-default-e2e-test:
#    uses: aws-observability/aws-application-signals-test-framework/.github/workflows/python-ec2-default-e2e-test.yml@consolidate-release
#    secrets: inherit
#    with:
#      aws-region: us-east-1
#      caller-workflow-name: 'main-build'
#      cw-agent-rpm: ${{ env.CW_AGENT_RPM_BUCKET }}
#
#  python-ec2-asg-e2e-test:
#    uses: aws-observability/aws-application-signals-test-framework/.github/workflows/python-ec2-asg-e2e-test.yml@consolidate-release
#    secrets: inherit
#    with:
#      aws-region: us-east-1
#      caller-workflow-name: 'main-build'
#      cw-agent-rpm: ${{ env.CW_AGENT_RPM_BUCKET }}